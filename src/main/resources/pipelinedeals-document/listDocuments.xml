<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<!-- Method Documentation URL: https://www.pipelinedeals.com/api/docs/resources/documents -->
<template name="listDocuments" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="documentName" description="The filename the document."/>
    <parameter name="documentType"
               description="Only documents with document_type [all, spreadsheets, images, documents, pds, presentations, others]."/>
    <parameter name="documentOwner" description="The unique id of the owner."/>
    <parameter name="associatedWith"
               description="Only documents associated with [all, companies, deals, email, people, shared]."/>
    <parameter name="documentUploadedFromDate"
               description="Timestamp for the from field when the document was uploaded."/>
    <parameter name="documentUploadedToDate" description="Timestamp for the to field when the document was uploaded."/>
    <parameter name="documentModifiedFromDate" description="Documents updated within the specified date range."/>
    <parameter name="documentModifiedToDate" description="Documents updated within the specified date range."/>
    <parameter name="page" description="No. of the page to retrieve when results are paginated."/>
    <parameter name="perPage" description="Entries to list per page when results are paginated."/>
    <parameter name="sort" description="Field to sort the calendar entries."/>
    <sequence>
        <property name="uri.var.documentName" expression="$func:documentName"/>
        <property name="uri.var.documentType" expression="$func:documentType"/>
        <property name="uri.var.documentOwner" expression="$func:documentOwner"/>
        <property name="uri.var.associatedWith" expression="$func:associatedWith"/>
        <property name="uri.var.documentUploadedFromDate" expression="$func:documentUploadedFromDate"/>
        <property name="uri.var.documentUploadedToDate" expression="$func:documentUploadedToDate"/>
        <property name="uri.var.documentModifiedFromDate" expression="$func:documentModifiedFromDate"/>
        <property name="uri.var.documentModifiedToDate" expression="$func:documentModifiedToDate"/>
        <property name="uri.var.page" expression="$func:page"/>
        <property name="uri.var.perPage" expression="$func:perPage"/>
        <property name="uri.var.sort" expression="$func:sort"/>
        <script language="js">
            <![CDATA[
                var documentUploadedFromDate = mc.getProperty('uri.var.documentUploadedFromDate');
                var apiKey = mc.getProperty('uri.var.apiKey');
                var documentType = mc.getProperty('uri.var.documentType');
                var documentModifiedFromDate = mc.getProperty('uri.var.documentModifiedFromDate');
                var documentModifiedToDate = mc.getProperty('uri.var.documentModifiedToDate');
                var documentName = mc.getProperty('uri.var.documentName');
                var sort = mc.getProperty('uri.var.sort');
                var associatedWith = mc.getProperty('uri.var.associatedWith');
                var perPage = mc.getProperty('uri.var.perPage');
                var documentOwner = mc.getProperty('uri.var.documentOwner');
                var attributes = mc.getProperty('uri.var.attributes');
                var page = mc.getProperty('uri.var.page');
                var documentUploadedToDate = mc.getProperty('uri.var.documentUploadedToDate');
                var urlQuery = '?api_key=' + apiKey;

                if (documentName != null && documentName != "") {
                    urlQuery += '&conditions[document_name]=' + documentName;
                }
                if (documentType != null && documentType != "") {
                    urlQuery += '&conditions[document_type]=' + documentType;
                }
                if (documentOwner != null && documentOwner != "") {
                    urlQuery += '&conditions[document_owner]=' + documentOwner;
                }
                if (associatedWith != null && associatedWith != "") {
                    urlQuery += '&conditions[associated_with]=' + associatedWith;
                }
                if (documentUploadedFromDate != null && documentUploadedFromDate != "") {
                    urlQuery += '&conditions[document_uploaded][from_date]=' + documentUploadedFromDate;
                }
                if (documentUploadedToDate != null && documentUploadedToDate != "") {
                    urlQuery += '&conditions[document_uploaded][to_date]=' + documentUploadedToDate;
                }
                if (documentModifiedFromDate != null && documentModifiedFromDate != "") {
                    urlQuery += '&conditions[document_modified][from_date]=' + documentModifiedFromDate;
                }
                if (documentModifiedToDate != null && documentModifiedToDate != "") {
                    urlQuery += '&conditions[document_modified][to_date]=' + documentModifiedToDate;
                }
                if (page != null && page != "") {
                    urlQuery += '&page=' + page;
                }
                if (perPage != null && perPage != "") {
                    urlQuery += '&per_page=' + perPage;
                }
                if (sort != null && sort != "") {
                    urlQuery += '&sort=' + sort;
                }
                if (attributes != null && attributes != "") {
                    urlQuery += '&attrs=' + attributes;
                }
                mc.setProperty('uri.var.urlQuery', urlQuery);
            ]]>
        </script>
        <call>
            <endpoint>
                <http method="get" uri-template="{+uri.var.apiUrl}/documents.json{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <!-- Remove custom Headers from the API Response -->
        <header name="Access-Control-Allow-Credentials" action="remove" scope="transport"/>
        <header name="Access-Control-Expose-Headers" action="remove" scope="transport"/>
        <header name="Access-Control-Max-Age" action="remove" scope="transport"/>
        <header name="Status" action="remove" scope="transport"/>
        <header name="Vary" action="remove" scope="transport"/>
        <header name="X-Runtime" action="remove" scope="transport"/>
        <header name="X-UA-Compatible" action="remove" scope="transport"/>
        <header name="ETag" action="remove" scope="transport"/>
    </sequence>
</template>
