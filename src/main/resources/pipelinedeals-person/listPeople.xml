<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<!-- Method Documentation URL: https://www.pipelinedeals.com/api/docs/resources/people -->
<template name="listPeople" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="personId"
               description="The person with given person_id. Note: you can specify a comma-separated list of ids to retrieve more people at once."/>
    <parameter name="personName" description="The people with name like person_name."/>
    <parameter name="personOwner" description="The people owned by the person_owner (user_id)."/>
    <parameter name="personCity" description="The people with city like person_city."/>
    <parameter name="personState" description="The people with state like person_state."/>
    <parameter name="personZip" description="The people with zip code like person_zip."/>
    <parameter name="personPosition" description="The people with position like person_position."/>
    <parameter name="personCompanyName" description="The people with company name like person_company_name."/>
    <parameter name="leadSource" description="The people with lead source, (lead_source_id)."/>
    <parameter name="personStatus" description="The people with the status person_status, (status_id)."/>
    <parameter name="personEmail" description="The people with email like person_email."/>
    <parameter name="personFullName" description="The people with full name like person_full_name."/>
    <parameter name="personPhone" description="The people with phone number like person_phone."/>
    <parameter name="personConvertedFromDate"
               description="The people that were converted during the supplied date range."/>
    <parameter name="personConvertedToDate"
               description="The people that were converted during the supplied date range."/>
    <parameter name="personCreatedFromDate" description="The people that were created during the supplied date range."/>
    <parameter name="personCreatedToDate" description="The people that were created during the supplied date range."/>
    <parameter name="personModifiedFromDate"
               description="The people that were modified during the supplied date range."/>
    <parameter name="personModifiedToDate" description="The people that were modified during the supplied date range."/>
    <parameter name="personSimpleSearch"
               description="The people with first name, last name, email, or company name like person_simple_search."/>
    <parameter name="personType" description="Accepts Lead or Contact, to find people of that specific type."/>
    <parameter name="page" description="No. of the page to retrieve when results are paginated."/>
    <parameter name="perPage" description="Entries to list per page when results are paginated."/>
    <parameter name="searchId" description="Search people by previously saved filter with given search_id."/>
    <parameter name="sort" description="The sort order of people."/>
    <sequence>
        <property name="uri.var.personId" expression="$func:personId"/>
        <property name="uri.var.personName" expression="$func:personName"/>
        <property name="uri.var.personOwner" expression="$func:personOwner"/>
        <property name="uri.var.personCity" expression="$func:personCity"/>
        <property name="uri.var.personState" expression="$func:personState"/>
        <property name="uri.var.personZip" expression="$func:personZip"/>
        <property name="uri.var.personPosition" expression="$func:personPosition"/>
        <property name="uri.var.personCompanyName" expression="$func:personCompanyName"/>
        <property name="uri.var.leadSource" expression="$func:leadSource"/>
        <property name="uri.var.personStatus" expression="$func:personStatus"/>
        <property name="uri.var.personEmail" expression="$func:personEmail"/>
        <property name="uri.var.personFullName" expression="$func:personFullName"/>
        <property name="uri.var.personPhone" expression="$func:personPhone"/>
        <property name="uri.var.personConvertedFromDate" expression="$func:personConvertedFromDate"/>
        <property name="uri.var.personConvertedToDate" expression="$func:personConvertedToDate"/>
        <property name="uri.var.personCreatedFromDate" expression="$func:personCreatedFromDate"/>
        <property name="uri.var.personCreatedToDate" expression="$func:personCreatedToDate"/>
        <property name="uri.var.personModifiedFromDate" expression="$func:personModifiedFromDate"/>
        <property name="uri.var.personModifiedToDate" expression="$func:personModifiedToDate"/>
        <property name="uri.var.personSimpleSearch" expression="$func:personSimpleSearch"/>
        <property name="uri.var.personType" expression="$func:personType"/>
        <property name="uri.var.page" expression="$func:page"/>
        <property name="uri.var.perPage" expression="$func:perPage"/>
        <property name="uri.var.searchId" expression="$func:searchId"/>
        <property name="uri.var.sort" expression="$func:sort"/>
        <script language="js">
            <![CDATA[
                var personStatus = mc.getProperty('uri.var.personStatus');
                var apiKey = mc.getProperty('uri.var.apiKey');
                var personState = mc.getProperty('uri.var.personState');
                var personConvertedFromDate = mc.getProperty('uri.var.personConvertedFromDate');
                var personCreatedFromDate = mc.getProperty('uri.var.personCreatedFromDate');
                var personCity = mc.getProperty('uri.var.personCity');
                var personSimpleSearch = mc.getProperty('uri.var.personSimpleSearch');
                var personFullName = mc.getProperty('uri.var.personFullName');
                var personPhone = mc.getProperty('uri.var.personPhone');
                var personModifiedFromDate = mc.getProperty('uri.var.personModifiedFromDate');
                var searchId = mc.getProperty('uri.var.searchId');
                var personZip = mc.getProperty('uri.var.personZip');
                var personOwner = mc.getProperty('uri.var.personOwner');
                var personType = mc.getProperty('uri.var.personType');
                var personModifiedToDate = mc.getProperty('uri.var.personModifiedToDate');
                var personPosition = mc.getProperty('uri.var.personPosition');
                var personCompanyName = mc.getProperty('uri.var.personCompanyName');
                var leadSource = mc.getProperty('uri.var.leadSource');
                var sort = mc.getProperty('uri.var.sort');
                var personName = mc.getProperty('uri.var.personName');
                var perPage = mc.getProperty('uri.var.perPage');
                var personConvertedToDate = mc.getProperty('uri.var.personConvertedToDate');
                var personEmail = mc.getProperty('uri.var.personEmail');
                var personCreatedToDate = mc.getProperty('uri.var.personCreatedToDate');
                var personId = mc.getProperty('uri.var.personId');
                var attributes = mc.getProperty('uri.var.attributes');
                var page = mc.getProperty('uri.var.page');
                var urlQuery = '?api_key=' + apiKey;

                if (personId != null && personId != "") {
                    urlQuery += '&conditions[person_id]=' + personId;
                }
                if (personName != null && personName != "") {
                    urlQuery += '&conditions[person_name]=' + personName;
                }
                if (personOwner != null && personOwner != "") {
                    urlQuery += '&conditions[person_owner]=' + personOwner;
                }
                if (personCity != null && personCity != "") {
                    urlQuery += '&conditions[person_city]=' + personCity;
                }
                if (personState != null && personState != "") {
                    urlQuery += '&conditions[person_state]=' + personState;
                }
                if (personZip != null && personZip != "") {
                    urlQuery += '&conditions[person_zip]=' + personZip;
                }
                if (personPosition != null && personPosition != "") {
                    urlQuery += '&conditions[person_position]=' + personPosition;
                }
                if (personCompanyName != null && personCompanyName != "") {
                    urlQuery += '&conditions[person_company_name]=' + personCompanyName;
                }
                if (leadSource != null && leadSource != "") {
                    urlQuery += '&conditions[lead_source]=' + leadSource;
                }
                if (personStatus != null && personStatus != "") {
                    urlQuery += '&conditions[person_status]=' + personStatus;
                }
                if (personEmail != null && personEmail != "") {
                    urlQuery += '&conditions[person_email]=' + personEmail;
                }
                if (personFullName != null && personFullName != "") {
                    urlQuery += '&conditions[person_full_name]=' + personFullName;
                }
                if (personPhone != null && personPhone != "") {
                    urlQuery += '&conditions[person_phone]=' + personPhone;
                }
                if (personConvertedFromDate != null && personConvertedFromDate != "") {
                    urlQuery += '&conditions[person_converted][from_date]=' + personConvertedFromDate;
                }
                if (personConvertedToDate != null && personConvertedToDate != "") {
                    urlQuery += '&conditions[person_converted][to_date]=' + personConvertedToDate;
                }
                if (personCreatedFromDate != null && personCreatedFromDate != "") {
                    urlQuery += '&conditions[person_created][from_date]=' + personCreatedFromDate;
                }
                if (personCreatedToDate != null && personCreatedToDate != "") {
                    urlQuery += '&conditions[person_created][to_date]=' + personCreatedToDate;
                }
                if (personModifiedFromDate != null && personModifiedFromDate != "") {
                    urlQuery += '&conditions[person_modified][from_date]=' + personModifiedFromDate;
                }
                if (personModifiedToDate != null && personModifiedToDate != "") {
                    urlQuery += '&conditions[person_modified][to_date]=' + personModifiedToDate;
                }
                if (personSimpleSearch != null && personSimpleSearch != "") {
                    urlQuery += '&conditions[person_simple_search]=' + personSimpleSearch;
                }
                if (personType != null && personType != "") {
                    urlQuery += '&conditions[person_type]=' + personType;
                }
                if (page != null && page != "") {
                    urlQuery += '&page=' + page;
                }
                if (perPage != null && perPage != "") {
                    urlQuery += '&per_page=' + perPage;
                }
                if (searchId != null && searchId != "") {
                    urlQuery += '&search_id=' + searchId;
                }
                if (sort != null && sort != "") {
                    urlQuery += '&sort=' + sort;
                }
                if (attributes != null && attributes != "") {
                    urlQuery += '&attrs=' + attributes;
                }
                mc.setProperty('uri.var.urlQuery', urlQuery);
            ]]>
        </script>
        <call>
            <endpoint>
                <http method="get" uri-template="{+uri.var.apiUrl}/people.json{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <!-- Remove custom Headers from the API Response -->
        <header name="Access-Control-Allow-Credentials" action="remove" scope="transport"/>
        <header name="Access-Control-Expose-Headers" action="remove" scope="transport"/>
        <header name="Access-Control-Max-Age" action="remove" scope="transport"/>
        <header name="Status" action="remove" scope="transport"/>
        <header name="Vary" action="remove" scope="transport"/>
        <header name="X-Runtime" action="remove" scope="transport"/>
        <header name="X-UA-Compatible" action="remove" scope="transport"/>
        <header name="ETag" action="remove" scope="transport"/>
    </sequence>
</template>
