<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<!-- Method Documentation URL: https://www.pipelinedeals.com/api/docs/resources/people -->
<template name="createPerson" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="fullName"
               description="The full_name of the person (will split on space to set first and last name)."/>
    <parameter name="firstName" description="The first name of the person."/>
    <parameter name="lastName" description="The last name of the person."/>
    <parameter name="summary" description="Text summary description of the person."/>
    <parameter name="phone" description="Phone of the person."/>
    <parameter name="homePhone" description="Home phone of the person."/>
    <parameter name="mobile" description="Mobile of the person."/>
    <parameter name="position" description="Position of the person."/>
    <parameter name="website" description="Website of the person."/>
    <parameter name="email" description="Email of the person."/>
    <parameter name="secondaryEmail" description="Secondary email of the person."/>
    <parameter name="homeEmail" description="Home email of the person."/>
    <parameter name="companyId" description="The company id of the person."/>
    <parameter name="companyName"
               description="The company name of the person (if changed, will find or create a company by that name)."/>
    <parameter name="userId" description="The user id of the person."/>
    <parameter name="type" description="Specify the person type."/>
    <parameter name="leadStatusId" description="Specify the lead status id."/>
    <parameter name="leadSourceId" description="Specify the lead source id."/>
    <parameter name="imageThumbnailUrl"
               description="A link to the person's avatar. Avatar is scaled to maximum of 50x50 pixels."/>
    <parameter name="predefinedContactsTagIds" description="An array of tag ids this person is tagged with."/>
    <parameter name="customFields" description="Custom fields for the person. ."/>
    <parameter name="workAddress" description="Work address of the person."/>
    <parameter name="secondaryWorkAddress" description="Secondary work address of the person."/>
    <parameter name="workCity" description="Work city of the person."/>
    <parameter name="workState" description="Work state of the person."/>
    <parameter name="workCountry" description="Work country of the person."/>
    <parameter name="workPostalCode" description="Work postal code of the person."/>
    <parameter name="homeAddress" description="Home address of the person."/>
    <parameter name="secondaryHomeAddress" description="Secondary home address of the person."/>
    <parameter name="homeCity" description="Home city of the person."/>
    <parameter name="homeState" description="Home state of the person."/>
    <parameter name="homeCountry" description="Home country of the person."/>
    <parameter name="homePostalCode" description="Home postal code of the person."/>
    <parameter name="facebookUrl" description="Facebook url of the person."/>
    <parameter name="linkedInUrl" description="LinkedIn url of the person."/>
    <parameter name="twitter" description="Twitter account of the person."/>
    <parameter name="instantMessage" description="Instant message of the person."/>
    <parameter name="createdAt" description="Timestamp for when person was created."/>
    <parameter name="updatedAt" description="Timestamp for when person was last updated."/>
    <parameter name="unsubscribed" description="Whether or not the person is unsubscribed."/>
    <parameter name="todoTemplateId" description="To apply a people-based todo template when creating the person."/>
    <parameter name="todoTemplateUserId"
               description="To set the owner of any tasks created by applying the given todo template."/>
    <parameter name="fax" description="The person's fax."/>
    <sequence>
        <property name="uri.var.fullName" expression="$func:fullName"/>
        <property name="uri.var.firstName" expression="$func:firstName"/>
        <property name="uri.var.lastName" expression="$func:lastName"/>
        <property name="uri.var.summary" expression="$func:summary"/>
        <property name="uri.var.phone" expression="$func:phone"/>
        <property name="uri.var.homePhone" expression="$func:homePhone"/>
        <property name="uri.var.mobile" expression="$func:mobile"/>
        <property name="uri.var.position" expression="$func:position"/>
        <property name="uri.var.website" expression="$func:website"/>
        <property name="uri.var.email" expression="$func:email"/>
        <property name="uri.var.secondaryEmail" expression="$func:secondaryEmail"/>
        <property name="uri.var.homeEmail" expression="$func:homeEmail"/>
        <property name="uri.var.companyId" expression="$func:companyId"/>
        <property name="uri.var.companyName" expression="$func:companyName"/>
        <property name="uri.var.userId" expression="$func:userId"/>
        <property name="uri.var.type" expression="$func:type"/>
        <property name="uri.var.leadStatusId" expression="$func:leadStatusId"/>
        <property name="uri.var.leadSourceId" expression="$func:leadSourceId"/>
        <property name="uri.var.imageThumbnailUrl" expression="$func:imageThumbnailUrl"/>
        <property name="uri.var.predefinedContactsTagIds" expression="$func:predefinedContactsTagIds"/>
        <property name="uri.var.customFields" expression="$func:customFields"/>
        <property name="uri.var.workAddress" expression="$func:workAddress"/>
        <property name="uri.var.secondaryWorkAddress" expression="$func:secondaryWorkAddress"/>
        <property name="uri.var.workCity" expression="$func:workCity"/>
        <property name="uri.var.workState" expression="$func:workState"/>
        <property name="uri.var.workCountry" expression="$func:workCountry"/>
        <property name="uri.var.workPostalCode" expression="$func:workPostalCode"/>
        <property name="uri.var.homeAddress" expression="$func:homeAddress"/>
        <property name="uri.var.secondaryHomeAddress" expression="$func:secondaryHomeAddress"/>
        <property name="uri.var.homeCity" expression="$func:homeCity"/>
        <property name="uri.var.homeState" expression="$func:homeState"/>
        <property name="uri.var.homeCountry" expression="$func:homeCountry"/>
        <property name="uri.var.homePostalCode" expression="$func:homePostalCode"/>
        <property name="uri.var.facebookUrl" expression="$func:facebookUrl"/>
        <property name="uri.var.linkedInUrl" expression="$func:linkedInUrl"/>
        <property name="uri.var.twitter" expression="$func:twitter"/>
        <property name="uri.var.instantMessage" expression="$func:instantMessage"/>
        <property name="uri.var.createdAt" expression="$func:createdAt"/>
        <property name="uri.var.updatedAt" expression="$func:updatedAt"/>
        <property name="uri.var.unsubscribed" expression="$func:unsubscribed"/>
        <property name="uri.var.todoTemplateId" expression="$func:todoTemplateId"/>
        <property name="uri.var.todoTemplateUserId" expression="$func:todoTemplateUserId"/>
        <property name="uri.var.fax" expression="$func:fax"/>
        <script language="js">
            <![CDATA[
                var lastName = mc.getProperty('uri.var.lastName');
                var secondaryEmail = mc.getProperty('uri.var.secondaryEmail');
                var apiKey = mc.getProperty('uri.var.apiKey');
                var workPostalCode = mc.getProperty('uri.var.workPostalCode');
                var leadStatusId = mc.getProperty('uri.var.leadStatusId');
                var customFields = mc.getProperty('uri.var.customFields');
                var companyName = mc.getProperty('uri.var.companyName');
                var workCountry = mc.getProperty('uri.var.workCountry');
                var type = mc.getProperty('uri.var.type');
                var createdAt = mc.getProperty('uri.var.createdAt');
                var facebookUrl = mc.getProperty('uri.var.facebookUrl');
                var twitter = mc.getProperty('uri.var.twitter');
                var workState = mc.getProperty('uri.var.workState');
                var workCity = mc.getProperty('uri.var.workCity');
                var homeCity = mc.getProperty('uri.var.homeCity');
                var email = mc.getProperty('uri.var.email');
                var predefinedContactsTagIds = mc.getProperty('uri.var.predefinedContactsTagIds');
                var homeAddress = mc.getProperty('uri.var.homeAddress');
                var updatedAt = mc.getProperty('uri.var.updatedAt');
                var summary = mc.getProperty('uri.var.summary');
                var website = mc.getProperty('uri.var.website');
                var linkedInUrl = mc.getProperty('uri.var.linkedInUrl');
                var homePhone = mc.getProperty('uri.var.homePhone');
                var mobile = mc.getProperty('uri.var.mobile');
                var fullName = mc.getProperty('uri.var.fullName');
                var homeState = mc.getProperty('uri.var.homeState');
                var userId = mc.getProperty('uri.var.userId');
                var workAddress = mc.getProperty('uri.var.workAddress');
                var homePostalCode = mc.getProperty('uri.var.homePostalCode');
                var secondaryHomeAddress = mc.getProperty('uri.var.secondaryHomeAddress');
                var firstName = mc.getProperty('uri.var.firstName');
                var homeEmail = mc.getProperty('uri.var.homeEmail');
                var companyId = mc.getProperty('uri.var.companyId');
                var unsubscribed = mc.getProperty('uri.var.unsubscribed');
                var phone = mc.getProperty('uri.var.phone');
                var attributes = mc.getProperty('uri.var.attributes');
                var position = mc.getProperty('uri.var.position');
                var instantMessage = mc.getProperty('uri.var.instantMessage');
                var secondaryWorkAddress = mc.getProperty('uri.var.secondaryWorkAddress');
                var homeCountry = mc.getProperty('uri.var.homeCountry');
                var leadSourceId = mc.getProperty('uri.var.leadSourceId');
                var imageThumbnailUrl = mc.getProperty('uri.var.imageThumbnailUrl');
                var fax = mc.getProperty('uri.var.fax');
                var todoTemplateId = mc.getProperty('uri.var.todoTemplateId');
                var todoTemplateUserId = mc.getProperty('uri.var.todoTemplateUserId');
                var jsonPayload = {};
                var person = {};
                var urlQuery = '?api_key=' + apiKey;

                if (attributes != null && attributes != "") {
                    urlQuery += '&attrs=' + attributes;
                }
                mc.setProperty('uri.var.urlQuery', urlQuery);
                if (fullName != null && fullName != ""){
                    person.full_name = fullName;
                }
                if (firstName != null && firstName != ""){
                    person.first_name = firstName;
                }
                if (lastName != null && lastName != ""){
                    person.last_name = lastName;
                }
                if (summary != null && summary != ""){
                    person.summary = summary;
                }
                if (phone != null && phone != ""){
                    person.phone = phone;
                }
                if (homePhone != null && homePhone != ""){
                    person.home_phone = homePhone;
                }
                if (mobile != null && mobile != ""){
                    person.mobile = mobile;
                }
                if (position != null && position != ""){
                    person.position = position;
                }
                if (website != null && website != ""){
                    person.website = website;
                }
                if (email != null && email != ""){
                    person.email = email;
                }
                if (secondaryEmail != null && secondaryEmail != ""){
                    person.email2 = secondaryEmail;
                }
                if (homeEmail != null && homeEmail != ""){
                    person.home_email = homeEmail;
                }
                if (companyId != null && companyId != ""){
                    person.company_id = companyId;
                }
                if (companyName != null && companyName != ""){
                    person.company_name = companyName;
                }
                if (userId != null && userId != ""){
                    person.user_id = userId;
                }
                if (type != null && type != ""){
                    person.type = type;
                }
                if (leadStatusId != null && leadStatusId != ""){
                    person.lead_status_id = leadStatusId;
                }
                if (leadSourceId != null && leadSourceId != ""){
                    person.lead_source_id = leadSourceId;
                }
                if (imageThumbnailUrl != null && imageThumbnailUrl != ""){
                    person.image_thumb_url = imageThumbnailUrl;
                }
                if (predefinedContactsTagIds != null && predefinedContactsTagIds != ""){
                    person.predefined_contacts_tag_ids = eval("(" + predefinedContactsTagIds + ")");;
                }
                if (customFields != null && customFields != ""){
                    person.custom_fields = eval("(" + customFields + ")");
                }
                if (workAddress != null && workAddress != ""){
                    person.work_address_1 = workAddress;
                }
                if (secondaryWorkAddress != null && secondaryWorkAddress != ""){
                    person.work_address_2 = secondaryWorkAddress;
                }
                if (workCity != null && workCity != ""){
                    person.work_city = workCity;
                }
                if (workState != null && workState != ""){
                    person.work_state = workState;
                }
                if (workCountry != null && workCountry != ""){
                    person.work_country = workCountry;
                }
                if (workPostalCode != null && workPostalCode != ""){
                    person.work_postal_code = workPostalCode;
                }
                if (homeAddress != null && homeAddress != ""){
                    person.home_address_1 = homeAddress;
                }
                if (secondaryHomeAddress != null && secondaryHomeAddress != ""){
                    person.home_address_2 = secondaryHomeAddress;
                }
                if (homeCity != null && homeCity != ""){
                    person.home_city = homeCity;
                }
                if (homeState != null && homeState != ""){
                    person.home_state = homeState;
                }
                if (homeCountry != null && homeCountry != ""){
                    person.home_country = homeCountry;
                }
                if (homePostalCode != null && homePostalCode != ""){
                    person.home_postal_code = homePostalCode;
                }
                if (facebookUrl != null && facebookUrl != ""){
                    person.facebook_url = facebookUrl;
                }
                if (linkedInUrl != null && linkedInUrl != ""){
                    person.linked_in_url = linkedInUrl;
                }
                if (twitter != null && twitter != ""){
                    person.twitter = twitter;
                }
                if (instantMessage != null && instantMessage != ""){
                    person.instant_message = instantMessage;
                }
                if (createdAt != null && createdAt != ""){
                    person.created_at = createdAt;
                }
                if (updatedAt != null && updatedAt != ""){
                    person.updated_at = updatedAt;
                }
                if (unsubscribed != null && unsubscribed != ""){
                    person.unsubscribed = unsubscribed;
                }
                if (fax != null && fax != ""){
                    person.fax = fax;
                }
                if (todoTemplateId != null && todoTemplateId != ""){
                    jsonPayload.todo_template_id = todoTemplateId;
                }
                if (todoTemplateUserId != null && todoTemplateUserId != ""){
                    jsonPayload.todo_template_user_id = todoTemplateUserId;
                }
                jsonPayload.person = person;
                mc.setPayloadJSON(jsonPayload);
            ]]>
        </script>
        <call>
            <endpoint>
                <http method="post" uri-template="{+uri.var.apiUrl}/people.json{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <!-- Remove custom Headers from the API Response -->
        <header name="Access-Control-Allow-Credentials" action="remove" scope="transport"/>
        <header name="Access-Control-Expose-Headers" action="remove" scope="transport"/>
        <header name="Access-Control-Max-Age" action="remove" scope="transport"/>
        <header name="Status" action="remove" scope="transport"/>
        <header name="Vary" action="remove" scope="transport"/>
        <header name="X-Runtime" action="remove" scope="transport"/>
        <header name="X-UA-Compatible" action="remove" scope="transport"/>
        <header name="ETag" action="remove" scope="transport"/>
    </sequence>
</template>
