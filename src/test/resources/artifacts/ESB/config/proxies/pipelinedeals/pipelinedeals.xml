<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<proxy name="pipelinedeals" startOnLoad="true" statistics="disable" trace="disable" transports="https,http"
       xmlns="http://ws.apache.org/ns/synapse">
    <target>
        <inSequence>
            <property name="apiUrl" expression="json-eval($.apiUrl)"/>
            <property name="apiKey" expression="json-eval($.apiKey)"/>
            <property name="attributes" expression="json-eval($.attributes)"/>
            <property name="companyName" expression="json-eval($.companyName)"/>
            <property name="description" expression="json-eval($.description)"/>
            <property name="email" expression="json-eval($.email)"/>
            <property name="website" expression="json-eval($.website)"/>
            <property name="address1" expression="json-eval($.address1)"/>
            <property name="address2" expression="json-eval($.address2)"/>
            <property name="city" expression="json-eval($.city)"/>
            <property name="state" expression="json-eval($.state)"/>
            <property name="postalCode" expression="json-eval($.postalCode)"/>
            <property name="country" expression="json-eval($.country)"/>
            <property name="companyId" expression="json-eval($.companyId)"/>
            <property name="assocations" expression="json-eval($.assocations)"/>
            <property name="page" expression="json-eval($.page)"/>
            <property name="perPage" expression="json-eval($.perPage)"/>
            <property name="firstName" expression="json-eval($.firstName)"/>
            <property name="lastName" expression="json-eval($.lastName)"/>
            <property name="summary" expression="json-eval($.summary)"/>
            <property name="position" expression="json-eval($.position)"/>
            <property name="type" expression="json-eval($.type)"/>
            <property name="leadStatusId" expression="json-eval($.leadStatusId)"/>
            <property name="personId" expression="json-eval($.personId)"/>
            <property name="personConvertedFromDate" expression="json-eval($.personConvertedFromDate)"/>
            <property name="name" expression="json-eval($.name)"/>
            <property name="expectedCloseDate" expression="json-eval($.expectedCloseDate)"/>
            <property name="isArchived" expression="json-eval($.isArchived)"/>
            <property name="value" expression="json-eval($.value)"/>
            <property name="valueInCents" expression="json-eval($.valueInCents)"/>
            <property name="probability" expression="json-eval($.probability)"/>
            <property name="dealId" expression="json-eval($.dealId)"/>
            <property name="status" expression="json-eval($.status)"/>
            <property name="dealCreatedFromDate" expression="json-eval($.dealCreatedFromDate)"/>
            <property name="active" expression="json-eval($.active)"/>
            <property name="startTime" expression="json-eval($.startTime)"/>
            <property name="endTime" expression="json-eval($.endTime)"/>
            <property name="calendarEntryId" expression="json-eval($.calendarEntryId)"/>
            <property name="complete" expression="json-eval($.complete)"/>
            <property name="dueDate" expression="json-eval($.dueDate)"/>
            <property name="title" expression="json-eval($.title)"/>
            <property name="publicFileUrl" expression="json-eval($.publicFileUrl)"/>
            <property name="documentId" expression="json-eval($.documentId)"/>
            <property name="userId" expression="json-eval($.userId)"/>
            <pipelinedeals.init>
                <apiUrl>{$ctx:apiUrl}</apiUrl>
                <apiKey>{$ctx:apiKey}</apiKey>
                <attributes>{$ctx:attributes}</attributes>
            </pipelinedeals.init>
            <switch source="get-property('transport','Action')">
                <case regex="urn:createCompany">
                    <pipelinedeals.createCompany>
                        <companyName>{$ctx:companyName}</companyName>
                        <description>{$ctx:description}</description>
                        <email>{$ctx:email}</email>
                        <website>{$ctx:website}</website>
                        <address1>{$ctx:address1}</address1>
                        <address2>{$ctx:address2}</address2>
                        <city>{$ctx:city}</city>
                        <state>{$ctx:state}</state>
                        <postalCode>{$ctx:postalCode}</postalCode>
                        <country>{$ctx:country}</country>
                    </pipelinedeals.createCompany>
                </case>
                <case regex="urn:updateCompany">
                    <pipelinedeals.updateCompany>
                        <companyName>{$ctx:companyName}</companyName>
                        <description>{$ctx:description}</description>
                        <email>{$ctx:email}</email>
                        <website>{$ctx:website}</website>
                        <country>{$ctx:country}</country>
                        <companyId>{$ctx:companyId}</companyId>
                    </pipelinedeals.updateCompany>
                </case>
                <case regex="urn:getCompany">
                    <pipelinedeals.getCompany>
                        <companyId>{$ctx:companyId}</companyId>
                        <assocations>{$ctx:assocations}</assocations>
                    </pipelinedeals.getCompany>
                </case>
                <case regex="urn:listCompanies">
                    <pipelinedeals.listCompanies>
                        <page>{$ctx:page}</page>
                        <perPage>{$ctx:perPage}</perPage>
                    </pipelinedeals.listCompanies>
                </case>
                <case regex="urn:createPerson">
                    <pipelinedeals.createPerson>
                        <firstName>{$ctx:firstName}</firstName>
                        <lastName>{$ctx:lastName}</lastName>
                        <summary>{$ctx:summary}</summary>
                        <position>{$ctx:position}</position>
                        <email>{$ctx:email}</email>
                        <companyId>{$ctx:companyId}</companyId>
                        <type>{$ctx:type}</type>
                    </pipelinedeals.createPerson>
                </case>
                <case regex="urn:updatePerson">
                    <pipelinedeals.updatePerson>
                        <firstName>{$ctx:firstName}</firstName>
                        <lastName>{$ctx:lastName}</lastName>
                        <summary>{$ctx:summary}</summary>
                        <position>{$ctx:position}</position>
                        <email>{$ctx:email}</email>
                        <type>{$ctx:type}</type>
                        <leadStatusId>{$ctx:leadStatusId}</leadStatusId>
                        <personId>{$ctx:personId}</personId>
                    </pipelinedeals.updatePerson>
                </case>
                <case regex="urn:getPerson">
                    <pipelinedeals.getPerson>
                        <personId>{$ctx:personId}</personId>
                    </pipelinedeals.getPerson>
                </case>
                <case regex="urn:listPeople">
                    <pipelinedeals.listPeople>
                        <personConvertedFromDate>{$ctx:personConvertedFromDate}</personConvertedFromDate>
                        <page>{$ctx:page}</page>
                        <perPage>{$ctx:perPage}</perPage>
                    </pipelinedeals.listPeople>
                </case>
                <case regex="urn:createDeal">
                    <pipelinedeals.createDeal>
                        <name>{$ctx:name}</name>
                        <summary>{$ctx:summary}</summary>
                        <expectedCloseDate>{$ctx:expectedCloseDate}</expectedCloseDate>
                        <isArchived>{$ctx:isArchived}</isArchived>
                        <value>{$ctx:value}</value>
                        <valueInCents>{$ctx:valueInCents}</valueInCents>
                        <companyId>{$ctx:companyId}</companyId>
                        <probability>{$ctx:probability}</probability>
                    </pipelinedeals.createDeal>
                </case>
                <case regex="urn:updateDeal">
                    <pipelinedeals.updateDeal>
                        <name>{$ctx:name}</name>
                        <summary>{$ctx:summary}</summary>
                        <dealId>{$ctx:dealId}</dealId>
                        <isArchived>{$ctx:isArchived}</isArchived>
                        <value>{$ctx:value}</value>
                        <probability>{$ctx:probability}</probability>
                        <status>{$ctx:status}</status>
                    </pipelinedeals.updateDeal>
                </case>
                <case regex="urn:getDeal">
                    <pipelinedeals.updateDeal>
                        <dealId>{$ctx:dealId}</dealId>
                    </pipelinedeals.updateDeal>
                </case>
                <case regex="urn:listDeals">
                    <pipelinedeals.listDeals>
                        <dealCreatedFromDate>{$ctx:dealCreatedFromDate}</dealCreatedFromDate>
                        <page>{$ctx:page}</page>
                        <perPage>{$ctx:perPage}</perPage>
                    </pipelinedeals.listDeals>
                </case>
                <case regex="urn:createCalendarEntry">
                    <pipelinedeals.createCalendarEntry>
                        <name>{$ctx:name}</name>
                        <description>{$ctx:description}</description>
                        <type>{$ctx:type}</type>
                        <active>{$ctx:active}</active>
                        <startTime>{$ctx:startTime}</startTime>
                        <endTime>{$ctx:endTime}</endTime>
                    </pipelinedeals.createCalendarEntry>
                </case>
                <case regex="urn:updateCalendarEntry">
                    <pipelinedeals.updateCalendarEntry>
                        <calendarEntryId>{$ctx:calendarEntryId}</calendarEntryId>
                        <name>{$ctx:name}</name>
                        <description>{$ctx:description}</description>
                        <active>{$ctx:active}</active>
                        <complete>{$ctx:complete}</complete>
                        <dueDate>{$ctx:dueDate}</dueDate>
                    </pipelinedeals.updateCalendarEntry>
                </case>
                <case regex="urn:getCalendarEntry">
                    <pipelinedeals.getCalendarEntry>
                        <calendarEntryId>{$ctx:calendarEntryId}</calendarEntryId>
                    </pipelinedeals.getCalendarEntry>
                </case>
                <case regex="urn:listCalendarEntries">
                    <pipelinedeals.listCalendarEntries>
                        <page>{$ctx:page}</page>
                        <perPage>{$ctx:perPage}</perPage>
                    </pipelinedeals.listCalendarEntries>
                </case>
                <case regex="urn:createDocument">
                    <pipelinedeals.createDocument>
                        <title>{$ctx:title}</title>
                        <dealId>{$ctx:dealId}</dealId>
                        <publicFileUrl>{$ctx:publicFileUrl}</publicFileUrl>
                    </pipelinedeals.createDocument>
                </case>
                <case regex="urn:getDocument">
                    <pipelinedeals.getDocument>
                        <documentId>{$ctx:documentId}</documentId>
                    </pipelinedeals.getDocument>
                </case>
                <case regex="urn:listDocuments">
                    <pipelinedeals.listDocuments>
                        <page>{$ctx:page}</page>
                        <perPage>{$ctx:perPage}</perPage>
                    </pipelinedeals.listDocuments>
                </case>
                <case regex="urn:getAccountDetails">
                    <pipelinedeals.getAccountDetails/>
                </case>
                <case regex="urn:getUser">
                    <pipelinedeals.getUser>
                        <userId>{$ctx:userId}</userId>
                    </pipelinedeals.getUser>
                </case>
            </switch>
            <respond/>
        </inSequence>
        <outSequence>
            <log/>
            <send/>
        </outSequence>
    </target>
    <description/>
</proxy>
