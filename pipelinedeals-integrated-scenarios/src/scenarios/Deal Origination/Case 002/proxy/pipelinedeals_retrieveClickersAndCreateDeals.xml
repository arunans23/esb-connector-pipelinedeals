<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<!--Retrieve campaign clickers from mailchimp and create deals for them in Pipeline Deals -->
<proxy xmlns="http://ws.apache.org/ns/synapse" name="pipelinedeals_retrieveClickersAndCreateDeals"
       transports="https,http" statistics="disable" trace="disable" startOnLoad="true">
    <target>
        <inSequence>
            <!-- MailChimp Properties -->
            <property name="mailchimp.apiUrl" expression="json-eval($.mailchimp.apiUrl)"/>
            <property name="mailchimp.apiKey" expression="json-eval($.mailchimp.apiKey)"/>
            <property name="mailchimp.campaignId" expression="json-eval($.mailchimp.campaignId)"/>
            <property name="mailchimp.highUrl" expression="json-eval($.mailchimp.high.url)"/>
            <property name="mailchimp.lowUrl" expression="json-eval($.mailchimp.low.url)"/>
            <property name="mailchimp.highProbability" expression="json-eval($.mailchimp.high.probability)"/>
            <property name="mailchimp.lowProbability" expression="json-eval($.mailchimp.low.probability)"/>
            <!-- pipelineDeals Properties -->
            <property name="pipelinedeals.apiUrl" value="http://api.pipelinedeals.com"/>
            <property name="pipelinedeals.apiKey" expression="json-eval($.pipelinedeals.apiKey)"/>
            <property name="pipelinedeals.expectedCloseDate" expression="json-eval($.pipelinedeals.expectedCloseDate)"/>
            <property name="pipelinedeals.value" expression="json-eval($.pipelinedeals.value)"/>
            <property name="pipelinedeals.summary" expression="json-eval($.pipelinedeals.summary)"/>
            <!-- Operation scoped properties -->
            <property name="responseString" value="" scope="operation"/>
            <property name="activityName" value="pipelinedeals_retrieveClickersAndCreateDeals" scope="operation"/>
            <sequence key="removeResponseHeaders"/>
            <!-- Calling retrieveClickersAndCreateDeals-verifyPrerequisites sequence to get deal stages-->
            <sequence key="retrieveClickersAndCreateDeals-verifyPrerequisites"/>
            <!--Call mailchimp connector listCampaigns method to get the given campaign details -->
            <mailchimp.init>
                <apiUrl>{$ctx:mailchimp.apiUrl}</apiUrl>
                <apiKey>{$ctx:mailchimp.apiKey}</apiKey>
                <format>json</format>
            </mailchimp.init>
            <mailchimp.listCampaigns>
                <campaignId>{$ctx:mailchimp.campaignId}</campaignId>
            </mailchimp.listCampaigns>
            <sequence key="removeResponseHeaders"/>
            <property name="mailchimp.responseCampaignTotal" expression="json-eval($.total)"/>
            <!--Process only if the the particular campaign details retrieved-->
            <filter xpath="get-property('mailchimp.responseCampaignTotal') != 1">
                <then>
                    <!-- Failure case: Append an error message to be sent to the user. -->
                    <property name="id"
                              expression="fn:concat('mailchimp_campaignId:', get-property('mailchimp.campaignId'))"/>
                    <property name="errorResponse" expression="json-eval($)"/>
                    <call-template target="responseHandlerTemplate">
                        <with-param name="activity" value="mailchimp_getCampaign"/>
                        <with-param name="id" value="{$ctx:id}"/>
                        <with-param name="status" value="Skipped"/>
                        <with-param name="message" value="The given campaign ID is not valid"/>
                    </call-template>
                    <loopback/>
                </then>
                <else>
                    <property name="mailchimp.responseCampaignId" expression="json-eval($.data[0].id)"/>
                    <property name="mailchimp.campaignName" expression="json-eval($.data[0].title)"/>
                    <property name="mailchimp.companyName" expression="json-eval($.data[0].from_email)"/>
                    <!--Call mailchimp connector listCampaignClicks method to get the clicks for a particular campaign -->
                    <mailchimp.init>
                        <apiUrl>{$ctx:mailchimp.apiUrl}</apiUrl>
                        <apiKey>{$ctx:mailchimp.apiKey}</apiKey>
                        <format>json</format>
                    </mailchimp.init>
                    <mailchimp.listCampaignClicks>
                        <campaignId>{$ctx:mailchimp.campaignId}</campaignId>
                    </mailchimp.listCampaignClicks>
                    <sequence key="removeResponseHeaders"/>
                    <property name="mailchimp.clicks" expression="json-eval($.total)"/>
                    <!-- START: Proceed only if there are clicks for the campaign. -->
                    <filter xpath="get-property('mailchimp.clicks') = '[]'">
                        <then>
                            <!-- Failure case: Append an error message to be sent to the user. -->
                            <property name="id"
                                      expression="fn:concat('mailchimp_campaignId:', get-property('mailchimp.campaignId'))"/>
                            <call-template target="responseHandlerTemplate">
                                <with-param name="activity" value="mailchimp_getClicks"/>
                                <with-param name="id" value="{$ctx:id}"/>
                                <with-param name="status" value="Skipped"/>
                                <with-param name="message" value="No clicks for the campaign."/>
                            </call-template>
                            <loopback/>
                        </then>
                        <else>
                            <!--To retrieve the track IDs of the urls being clicked seperately -->
                            <script language="js">
                                <![CDATA[
									var clicks = eval("(" + mc.getProperty('mailchimp.clicks') + ")");
									var highLink = mc.getProperty('mailchimp.highUrl');
									var lowLink = mc.getProperty('mailchimp.lowUrl');
								    for(var i=0; i<clicks.length; i++){
										var click = clicks[i];
										if(click.url == highLink) {
											var hTrackId = ''+click.tid;
											mc.setProperty('mailchimp.highTrackId', hTrackId);
										}
										if(click.url == lowLink) {
											var lTrackId = ''+click.tid;
											mc.setProperty('mailchimp.lowTrackId', lTrackId);
										}
									}
								]]>
                            </script>
                            <!-- START: Proceed only if the link with higher probability is found -->
                            <filter source="boolean(get-property('mailchimp.highTrackId'))" regex="false">
                                <then>
                                    <property name="id"
                                              expression="fn:concat('mailchimp_campaignId:', get-property('mailchimp.campaignId'))"/>
                                    <property name="message"
                                              expression="fn:concat('The link [', get-property('mailchimp.highUrl'),'] is not valid')"/>
                                    <!-- Failure case: Append an error message to be sent to the user. -->
                                    <property name="errorResponse" expression="json-eval($)"/>
                                    <call-template target="responseHandlerTemplate">
                                        <with-param name="activity" value="mailchimp_getCampaignClicks"/>
                                        <with-param name="id" value="{$ctx:id}"/>
                                        <with-param name="status" value="Skipped"/>
                                        <with-param name="message" value="{$ctx:message}"/>
                                    </call-template>
                                    <!-- Calling mailchimp-retrieveLowProbabilityClickerSeq sequence to create deals for low probability link-->
                                    <sequence key="mailchimp-retrieveLowProbabilityClickerSeq"/>
                                    <loopback/>
                                </then>
                                <else>
                                    <!--Call mailchimp connector listCampaignClickers method to get the clickers for a particular Url -->
                                    <mailchimp.init>
                                        <apiUrl>{$ctx:mailchimp.apiUrl}</apiUrl>
                                        <apiKey>{$ctx:mailchimp.apiKey}</apiKey>
                                        <format>json</format>
                                    </mailchimp.init>
                                    <mailchimp.listCampaignClickers>
                                        <campaignId>{$ctx:mailchimp.campaignId}</campaignId>
                                        <trackingid>{$ctx:mailchimp.highTrackId}</trackingid>
                                    </mailchimp.listCampaignClickers>
                                    <filter source="$axis2:HTTP_SC" regex="200">
                                        <then>
                                            <property name="clickerIndex" expression="0" scope="operation"/>
                                            <property name="clickerCount" expression="count(//data)" scope="operation"/>
                                            <!-- START: Proceed only if there are clickers for the high probability url -->
                                            <filter xpath="get-property('operation', 'clickerCount') = 0">
                                                <then>
                                                    <property name="id"
                                                              expression="fn:concat('mailchimp_campaignId:',get-property('mailchimp.campaignId'),',mailchimp_highUrlId:',get-property('mailchimp.highTrackId'))"/>
                                                    <property name="status" value="Skipped"/>
                                                    <property name="message" value="No clickers for the link."/>
                                                    <call-template target="responseHandlerTemplate">
                                                        <with-param name="id" value="{$ctx:id}"/>
                                                        <with-param name="activity" value="mailchimp_getClickers"/>
                                                        <with-param name="status" value="{$ctx:status}"/>
                                                        <with-param name="message" value="{$ctx:message}"/>
                                                    </call-template>
                                                    <!-- Calling mailchimp-retrieveLowProbabilityClickerSeq sequence to create deals for low probability link-->
                                                    <sequence key="mailchimp-retrieveLowProbabilityClickerSeq"/>
                                                    <loopback/>
                                                </then>
                                                <else>
                                                    <!--BEGIN:FOR EACH clicker -->
                                                    <iterate continueParent="false" id="clickers" expression="//data"
                                                             sequential="true">
                                                        <target>
                                                            <sequence>
                                                                <property name="mailchimp.memberId"
                                                                          expression="json-eval($.data.member.id)"/>
                                                                <property name="mailchimp.memberNotes"
                                                                          expression="json-eval($.data.member.notes)"/>
                                                                <property name="mailchimp.memberEmail"
                                                                          expression="json-eval($.data.member.email)"/>
                                                                <property name="mailchimp.listId"
                                                                          expression="json-eval($.data.member.list_id)"/>
                                                                <property name="mailchimp.memberFName"
                                                                          expression="json-eval($.data.member.merges.FNAME)"/>
                                                                <property name="mailchimp.memberLName"
                                                                          expression="json-eval($.data.member.merges.LNAME)"/>
                                                                <!-- Call createContactsAndDeals template to create people and deals -->
                                                                <call-template target="createContactsAndDeals">
                                                                    <with-param name="mailchimp.apiKey"
                                                                                value="{$ctx:mailchimp.apiKey}"/>
                                                                    <with-param name="mailchimp.apiUrl"
                                                                                value="{$ctx:mailchimp.apiUrl}"/>
                                                                    <with-param name="mailchimp.notes"
                                                                                value="{$ctx:mailchimp.memberNotes}"/>
                                                                    <with-param name="mailchimp.memberId"
                                                                                value="{$ctx:mailchimp.memberId}"/>
                                                                    <with-param name="mailchimp.listId"
                                                                                value="{$ctx:mailchimp.listId}"/>
                                                                    <with-param name="mailchimp.campaignId"
                                                                                value="{$ctx:mailchimp.responseCampaignId}"/>
                                                                    <with-param name="pipelinedeals.apiKey"
                                                                                value="{$ctx:pipelinedeals.apiKey}"/>
                                                                    <with-param name="pipelinedeals.apiUrl"
                                                                                value="{$ctx:pipelinedeals.apiUrl}"/>
                                                                    <with-param name="pipelinedeals.personEmail"
                                                                                value="{$ctx:mailchimp.memberEmail}"/>
                                                                    <with-param name="pipelinedeals.dealName"
                                                                                value="{$ctx:mailchimp.campaignName}"/>
                                                                    <with-param name="pipelinedeals.dealProbability"
                                                                                value="{$ctx:mailchimp.highProbability}"/>
                                                                    <with-param name="pipelinedeals.personFName"
                                                                                value="{$ctx:mailchimp.memberFName}"/>
                                                                    <with-param name="pipelinedeals.personLName"
                                                                                value="{$ctx:mailchimp.memberLName}"/>
                                                                    <with-param name="pipelinedeals.expectedCloseDate"
                                                                                value="{$ctx:pipelinedeals.expectedCloseDate}"/>
                                                                    <with-param name="pipelinedeals.value"
                                                                                value="{$ctx:pipelinedeals.value}"/>
                                                                    <with-param name="pipelinedeals.dealStageId"
                                                                                value="{$ctx:pipelinedeals.followupStageId}"/>
                                                                    <with-param name="pipelinedeals.dealSummary"
                                                                                value="{$ctx:pipelinedeals.summary}"/>
                                                                    <with-param name="pipelinedeals.sourceId"
                                                                                value="{$ctx:pipelinedeals.mailchimpDealSourceId}"/>
                                                                </call-template>
                                                                <property name="clickerIndex"
                                                                          expression="get-property('operation','clickerIndex') + 1"
                                                                          scope="operation"/>
                                                                <filter xpath="get-property('operation','clickerIndex') = get-property('operation', 'clickerCount')">
                                                                    <then>
                                                                        <!-- Calling mailchimp-retrieveLowProbabilityClickerSeq sequence to create deals for low probability link-->
                                                                        <sequence
                                                                                key="mailchimp-retrieveLowProbabilityClickerSeq"/>
                                                                        <loopback/>
                                                                    </then>
                                                                </filter>
                                                            </sequence>
                                                        </target>
                                                    </iterate>
                                                    <!--END:FOR EACH clicker -->
                                                </else>
                                            </filter>
                                            <!-- END: Proceed only if there are clickers for the high probability url -->
                                        </then>
                                        <else>
                                            <!-- Calling mailchimp-retrieveLowProbabilityClickerSeq sequence to create deals for low probability link-->
                                            <sequence key="mailchimp-retrieveLowProbabilityClickerSeq"/>
                                            <loopback/>
                                        </else>
                                    </filter>
                                </else>
                            </filter>
                            <!-- END: Proceed only if the link with higher probability is found -->
                        </else>
                    </filter>
                    <!-- END: Proceed only if there are clicks for the campaign. -->
                </else>
            </filter>
        </inSequence>
        <outSequence>
            <filter source="boolean(get-property('operation', 'responseString'))" regex="false">
                <then>
                    <payloadFactory media-type="json">
                        <format>{
                            "Response":{
                            "process":"pipelinedeals_retrieveClickersAndCreateDeals",
                            "activityResponse":"All deals have been created for the campaign already."
                            }
                            }
                        </format>
                    </payloadFactory>
                </then>
                <else>
                    <payloadFactory media-type="json">
                        <format>{
                            "Response":{
                            "process":"pipelinedeals_retrieveClickersAndCreateDeals",
                            "activityResponse":[$1]
                            }
                            }
                        </format>
                        <args>
                            <arg expression="get-property('operation', 'responseString')"/>
                        </args>
                    </payloadFactory>
                </else>
            </filter>
            <respond/>
        </outSequence>
    </target>
</proxy>